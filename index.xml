<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sudeepthi Rebbalapalli's Website on Sudeepthi Rebbalapalli</title><link>https://sudeepthi59o.github.io/</link><description>Recent content in Sudeepthi Rebbalapalli's Website on Sudeepthi Rebbalapalli</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Wed, 16 Apr 2025 15:26:15 +0000</lastBuildDate><atom:link href="https://sudeepthi59o.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Software Development Resume</title><link>https://sudeepthi59o.github.io/resume/sde-resume/</link><pubDate>Wed, 16 Apr 2025 15:26:15 +0000</pubDate><guid>https://sudeepthi59o.github.io/resume/sde-resume/</guid><description>&lt;p>&lt;a href="https://sudeepthi59o.github.io/Sudeepthi_Rebbalapalli_resume_SDE.pdf">Download my SDE Resume&lt;/a>&lt;/p></description></item><item><title>Automated Acquire Game</title><link>https://sudeepthi59o.github.io/portfolio/automated-acquire-game/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/automated-acquire-game/</guid><description>&lt;p>The Automated Acquire Game project is a Python-based implementation of the classic board game &lt;a href="https://en.wikipedia.org/wiki/Acquire">Acquire&lt;/a>, designed to simulate and automate gameplay. It includes intelligent decision-making algorithms to simulate player behavior and strategic gameplay. The project is structured with a modular object-oriented architecture, handling different components such as gameplay flow, board state management, and AI-driven player logic.&lt;/p>
&lt;hr>
&lt;h2 id="key-features">&lt;strong>Key Features&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Automated Gameplay&lt;/strong>: AI-driven simulation allows the game to play itself with no human input.&lt;/p></description></item><item><title>Data Focused Resume</title><link>https://sudeepthi59o.github.io/resume/data-resume/</link><pubDate>Wed, 16 Apr 2025 15:26:15 +0000</pubDate><guid>https://sudeepthi59o.github.io/resume/data-resume/</guid><description>&lt;p>&lt;a href="https://sudeepthi59o.github.io/Sudeepthi_Rebbalapalli_resume_DS.pdf">Download my DS Resume&lt;/a>&lt;/p></description></item><item><title>Early Onset Parkinson's Detection from Speech Data</title><link>https://sudeepthi59o.github.io/portfolio/early-onset-parkinsons-detection/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/early-onset-parkinsons-detection/</guid><description>&lt;h2 id="overview">&lt;strong>Overview&lt;/strong>&lt;/h2>
&lt;p>This project implements an end-to-end deep learning model using &lt;strong>convolutional neural networks (CNNs)&lt;/strong> to detect &lt;strong>early-onset Parkinson&amp;rsquo;s Disease (PD)&lt;/strong> from speech data. By leveraging &lt;strong>Mel spectrograms&lt;/strong>—visual and mathematical representations of sound frequencies over time, to reflect human hearing perception—our model extracts features that help identify vocal indicators of PD.&lt;/p>
&lt;p>The work builds on methodologies by Quan et al. and evaluates their applicability to a real-world Italian dataset. Tools like &lt;strong>Librosa&lt;/strong> were used for audio processing, and &lt;strong>NeuroSpeech&lt;/strong>, a software tool designed to assist medical professionals in evaluating biomarkers of neurodegenerative diseases through speech analysis, was explored to identify the key factors in detecting PD from speech.&lt;/p></description></item><item><title>Network Protocol Implementation</title><link>https://sudeepthi59o.github.io/portfolio/computer-networks/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/computer-networks/</guid><description>&lt;p>This multi-part project series was developed over the span of a graduate-level Computer Networks course. Each module focused on implementing key components of real-world networking, including application-level protocols and custom transport-layer mechanisms. All implementations were written in C using low-level socket programming.&lt;/p>
&lt;hr>
&lt;h2 id="project-modules">&lt;strong>Project Modules&lt;/strong>&lt;/h2>
&lt;h3 id="http-client--server-implementation">&lt;strong>HTTP Client &amp;amp; Server Implementation&lt;/strong>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Objective:&lt;/strong> Implement an HTTP client and HTTP server to simulate web communication, focusing on the underlying TCP communication layer.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Key Features:&lt;/strong>&lt;/p></description></item><item><title>Predictive Maintenance Using AWS</title><link>https://sudeepthi59o.github.io/portfolio/predictive-maintainance/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/predictive-maintainance/</guid><description>&lt;h2 id="overview">&lt;strong>Overview&lt;/strong>&lt;/h2>
&lt;p>This project focuses on building a Predictive Maintenance system using the &lt;a href="https://archive.ics.uci.edu/dataset/682/ai4i+2020+predictive+maintenance+dataset">AI4I 2020 Predictive Maintenance Dataset&lt;/a> and &lt;a href="https://aws.amazon.com/sagemaker/canvas/">AWS SageMaker Canvas&lt;/a>, a no-code ML platform. The goal is to predict machine failures before they occur based on operational and sensor data. By leveraging AWS services, the project efficiently processes and analyzes data to provide real-time predictions of equipment malfunctions.&lt;/p>
&lt;p>Key steps included data ingestion, cleaning, feature engineering, exploratory analysis, model building, evaluation, and basic explainability.&lt;/p></description></item><item><title>Global Development Index Analysis</title><link>https://sudeepthi59o.github.io/portfolio/human-development_index-gcp/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/human-development_index-gcp/</guid><description>&lt;h2 id="overview">&lt;strong>Overview&lt;/strong>&lt;/h2>
&lt;p>This project analyzes the evolution of global Human Development Index (HDI), Gender Development Index (GDI), and Gender Inequality Index (GII) from 1990 to 2023, using a cloud-based data pipeline and interactive visualizations.&lt;/p>
&lt;p>The pipeline includes data collection, cleaning, storage in Google Cloud Platform (GCP) services, analysis using SQL queries in BigQuery, and visualization with Plotly. By integrating cloud-based processing and interactive charts, the project provides deeper insights into development patterns over time.&lt;/p></description></item><item><title>AI/ML Resume</title><link>https://sudeepthi59o.github.io/resume/ai-ml-resume/</link><pubDate>Wed, 16 Apr 2025 15:26:15 +0000</pubDate><guid>https://sudeepthi59o.github.io/resume/ai-ml-resume/</guid><description>&lt;p>&lt;a href="https://sudeepthi59o.github.io/Sudeepthi_Rebbalapalli_resume_AIML.pdf">Download my AI/ML Resume&lt;/a>&lt;/p></description></item><item><title>Android Apps</title><link>https://sudeepthi59o.github.io/portfolio/android-apps-landing/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android-apps-landing/</guid><description>&lt;h2 id="android-apps-collection">&lt;strong>Android Apps Collection&lt;/strong>&lt;/h2>
&lt;p>This page showcases a curated collection of Android applications I developed as part of my coursework. These apps demonstrate key concepts such as user authentication, CRUD operations, animations, and Jetpack Compose UI.&lt;/p>
&lt;h3 id="1-calculator-appportfolioandroidcalculator">&lt;strong>1. &lt;a href="https://sudeepthi59o.github.io/portfolio/android/calculator/">Calculator App&lt;/a>&lt;/strong>&lt;/h3>
&lt;p>A simple calculator that mimics the functionality and design of the iPhone’s default calculator. Supports basic arithmetic operations with a responsive UI.&lt;/p>
&lt;h3 id="2-notes-appportfolioandroidnotesapp">&lt;strong>2. &lt;a href="https://sudeepthi59o.github.io/portfolio/android/notesapp/">Notes App&lt;/a>&lt;/strong>&lt;/h3>
&lt;p>A note-taking app with login functionality. Users can create, edit, and delete notes. Uses Firebase for authentication and Firestore for data storage.&lt;/p></description></item><item><title>Android Box Drawing App</title><link>https://sudeepthi59o.github.io/portfolio/android/drawingboxes/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android/drawingboxes/</guid><description>&lt;p>A simple and interactive Android app that lets users draw boxes by touching the screen. The app supports multiple boxes on the canvas, and each box can be drawn with touch gestures, offering real-time visual feedback&lt;/p>
&lt;h3 id="core-features">Core Features&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Interactive Box Drawing:&lt;/strong> Users can draw boxes by tapping and dragging on the screen.&lt;/li>
&lt;li>&lt;strong>Multiple Boxes:&lt;/strong> Multiple boxes can be drawn and exist simultaneously on the canvas.&lt;/li>
&lt;li>&lt;strong>Real-Time Update:&lt;/strong> The app provides instant visual updates as users interact with the screen.&lt;/li>
&lt;li>&lt;strong>Customizable Appearance:&lt;/strong> Each box is drawn with a customizable color and style.&lt;/li>
&lt;li>&lt;strong>Canvas Background:&lt;/strong> A soft background color for better visibility and contrast.&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;p>The app features a minimalistic design with a simple canvas as the drawing area. Users can draw boxes by pressing down and dragging their finger across the screen. The app dynamically responds to touch events, allowing for precise control of box size and position.&lt;/p></description></item><item><title>Android Calculator App</title><link>https://sudeepthi59o.github.io/portfolio/android/calculator/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android/calculator/</guid><description>&lt;p>The Android Calculator app is designed to perform basic arithmetic operations while mimicking the functionality of the iPhone&amp;rsquo;s default calculator. It supports both portrait and landscape modes, with landscape mode unlocking advanced trigonometric and logarithmic functions.&lt;/p>
&lt;h3 id="core-features">Core Features&lt;/h3>
&lt;ul>
&lt;li>Basic arithmetic operations (addition, subtraction, multiplication, division)&lt;/li>
&lt;li>Trigonometric functions (sin, cos, tan) and logarithmic functions (log10, ln) in landscape mode&lt;/li>
&lt;li>User input persists across device rotations&lt;/li>
&lt;li>Custom app icon and button layout&lt;/li>
&lt;li>Log messages recorded for each button click&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;p>The app features a simple and intuitive interface with a standard calculator layout. In landscape mode, the layout adjusts to provide additional scientific functions, while the UI remains clear and easy to navigate. The app dynamically adjusts to changes in orientation, ensuring users can continue their calculations without interruption.&lt;/p></description></item><item><title>Android Notes App</title><link>https://sudeepthi59o.github.io/portfolio/android/notesapp/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android/notesapp/</guid><description>&lt;p>Coming soon&lt;/p>
&lt;h3 id="demo">Demo&lt;/h3>
&lt;p>&lt;img src="https://sudeepthi59o.github.io/notes_app_demo.gif" alt="Notes App Screenshot">&lt;/p></description></item><item><title>Android Pizza Ordering Interface</title><link>https://sudeepthi59o.github.io/portfolio/android/pizzaapp/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android/pizzaapp/</guid><description>&lt;p>The Android Calculator app is designed to perform basic arithmetic operations while mimicking the functionality of the iPhone&amp;rsquo;s default calculator. It supports both portrait and landscape modes, with landscape mode unlocking advanced trigonometric and logarithmic functions.&lt;/p>
&lt;h3 id="core-features">Core Features&lt;/h3>
&lt;ul>
&lt;li>Basic arithmetic operations (addition, subtraction, multiplication, division)&lt;/li>
&lt;li>Trigonometric functions (sin, cos, tan) and logarithmic functions (log10, ln) in landscape mode&lt;/li>
&lt;li>User input persists across device rotations&lt;/li>
&lt;li>Custom app icon and button layout&lt;/li>
&lt;li>Log messages recorded for each button click&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;p>The app features a simple and intuitive interface with a standard calculator layout. In landscape mode, the layout adjusts to provide additional scientific functions, while the UI remains clear and easy to navigate. The app dynamically adjusts to changes in orientation, ensuring users can continue their calculations without interruption.&lt;/p></description></item><item><title>Android Posts App</title><link>https://sudeepthi59o.github.io/portfolio/android/postsapp/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android/postsapp/</guid><description>&lt;p>The Android Posts app displays real-time posts submitted by users, including usernames, image uploads, and descriptions. The feed mimics core social platform functionality and includes authentication, live data updates, and dynamic UI rendering.&lt;/p>
&lt;h3 id="core-features">Core Features&lt;/h3>
&lt;ul>
&lt;li>Displays a real-time feed of posts from Firebase Firestore&lt;/li>
&lt;li>Each post includes a username, description, image (optional), and relative timestamp&lt;/li>
&lt;li>Supports user authentication and logout using Firebase Auth&lt;/li>
&lt;li>Navigation to post creation via a floating action button (FAB)&lt;/li>
&lt;li>Uses Coil library for smooth and efficient image loading&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;p>The app follows the Model-View-ViewModel (MVVM) architecture to maintain clean separation of concerns. Posts are observed using Kotlin StateFlow for real-time UI updates. A RecyclerView is used to display a scrollable list of posts with a custom layout per item. Relative timestamps (e.g., “2 hours ago”) are calculated using DateUtils. For development convenience, post images are hosted on GitHub and dynamically loaded using the Coil image loading library.&lt;/p></description></item><item><title>Android Sunset Animation App</title><link>https://sudeepthi59o.github.io/portfolio/android/sunsetanimation/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android/sunsetanimation/</guid><description>&lt;p>A simple Android app that simulates a sunset animation. Watch as the sun moves down the sky and the background color transitions from a blue sky to a beautiful sunset and eventually to a starry night.&lt;/p>
&lt;h3 id="core-features">Core Features&lt;/h3>
&lt;ul>
&lt;li>Smooth animation of the sun setting across the sky.&lt;/li>
&lt;li>Dynamic background color change from blue sky to sunset and night sky.&lt;/li>
&lt;li>Interactive: Tap anywhere on the screen to trigger the animation.&lt;/li>
&lt;/ul>
&lt;h3 id="design">Design&lt;/h3>
&lt;p>The app features a serene sky view, with a sun that moves down the screen to simulate the transition from day to night. The background color shifts from blue to sunset hues and then to a night sky, creating a peaceful, visually engaging experience.&lt;/p></description></item><item><title>Android Ticketing App</title><link>https://sudeepthi59o.github.io/portfolio/android/ticketingapp/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/android/ticketingapp/</guid><description>&lt;p>Coming soon&lt;/p>
&lt;h3 id="demo">Demo&lt;/h3>
&lt;p>&lt;img src="https://sudeepthi59o.github.io/ticket_app.gif" alt="Ticketing App Screenshot">&lt;/p></description></item></channel></rss>