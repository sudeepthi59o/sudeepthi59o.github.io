name: Deploy Hugo Site

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Ensure theme submodules are cloned
          fetch-depth: 0    # Get full commit history

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"

      - name: Build Site
        run: |
          hugo --minify  # Generate static files
          echo "Checking if 'public/' directory exists after Hugo build..."
          ls -la public/ || echo "Error: 'public/' directory is missing!"
          ls -la public/  # Verify output

      - name: Set Git Identity
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Check Working Directory
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of workspace:"
          ls -la

      - name: Ensure gh-pages Branch Exists
        run: |
          git fetch origin gh-pages || echo "gh-pages branch does not exist yet"
          if ! git show-ref --quiet refs/heads/gh-pages; then
            git checkout --orphan gh-pages
            git rm -rf .
            echo "# Placeholder for gh-pages" > README.md
            git add README.md
            git commit -m "Initial gh-pages branch"
            git push origin gh-pages --force  # Force push to create the branch
          else
            git checkout gh-pages  # Checkout if it exists
          fi

      - name: Deploy to GitHub Pages
        run: |
          git checkout gh-pages  # Ensure you are on the gh-pages branch
          git rm -rf .  # Clear the branch

          # Debug: Show contents before copying
          echo "Contents before copying:"
          ls -la

          # Ensure public folder exists before copying
          if [ -d "$GITHUB_WORKSPACE/public" ]; then
            cp -R $GITHUB_WORKSPACE/public/* $GITHUB_WORKSPACE/gh-pages/  # Copy new files
          else
            echo "Error: public/ directory does not exist!"
            exit 1  # Stop the workflow
          fi

          cd $GITHUB_WORKSPACE/gh-pages
          git add .  # Stage all changes
          git commit -m "Deploy updated site" || echo "No changes to commit"
          git push origin gh-pages  # Push the changes


      - name: Debug Git State (If Deployment Fails)
        if: failure()
        run: |
          git status
          git branch -a
          git log --oneline -5
