name: Deploy Hugo Site

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Ensure theme submodules are cloned
          fetch-depth: 0    # Get full commit history

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
            hugo-version: "0.134.2"
            extended: true  # Ensure it's the extended version

      - name: Build Site
        run: |
          hugo --minify  # Generate static files
          echo "Checking if 'public/' directory exists after Hugo build..."
          ls -la public/ || echo "Error: 'public/' directory is missing!"

      - name: Set Git Identity
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
      
      - name: Prepare Temporary Directory
        run: |
            mkdir temp_public  # Create a temporary directory
            cp -R public/* temp_public/  # Copy files to the temporary directory
            echo "Contents of temporary directory:"
            ls -la temp_public/  # List contents for debugging

      - name: Create gh-pages Worktree
        run: |
              if [ -d "public" ]; then
                if git worktree list | grep -q "^public "; then
                  echo "Removing existing 'public' worktree..."
                  git worktree remove public --force
                else
                  echo "'public' exists but is not a worktree. Removing it manually..."
                  rm -rf public
                fi
              fi
              echo "Adding new worktree for gh-pages..."
              git worktree add -B gh-pages public origin/gh-pages
          
          

      - name: Deploy to GitHub Pages
        run: |
          cd public  # Change directory to the gh-pages worktree
          git rm -rf .  # Clear the branch

          # Copy files from the temporary directory to gh-pages
          if [ -d "../temp_public" ]; then
            echo "Copying files from ../temp_public to the gh-pages branch..."
            cp -R ../temp_public/* .  # Copy new files from the temp directory
            echo "Contents of gh-pages branch after copying:"
            ls -la  # List contents for debugging
          else
            echo "Error: temp_public directory does not exist!"
            exit 1  # Stop the workflow
          fi

          # Ensure we are on the gh-pages branch before committing
          git add .  # Stage all changes
          echo "Checking staged files in gh-pages:"
          git status  # Show status of the working tree
          
          # Commit to gh-pages and push
          if git commit -m "Deploy updated site"; then
            echo "Changes committed successfully."
          else
            echo "No changes to commit."
          fi

          git push origin gh-pages  # Push the changes

      - name: Debug Git State (If Deployment Fails)
        if: failure()
        run: |
          echo "Debugging failed deployment..."
          git status
          git branch -a
          git log --oneline -5
