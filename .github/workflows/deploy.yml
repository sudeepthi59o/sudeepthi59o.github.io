name: Deploy Hugo Site

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Ensure theme submodules are cloned
          fetch-depth: 0    # Get full commit history

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"

      - name: Build Site
        run: |
          hugo --minify  # Generate static files
          echo "Checking if 'public/' directory exists after Hugo build..."
          ls -la public/ || echo "Error: 'public/' directory is missing!"

      - name: Set Git Identity
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Create gh-pages Worktree
        run: |
          git worktree add public gh-pages || echo "Worktree for gh-pages already exists"

      - name: Debug Directory Structure
        run: |
          echo "Current working directory:"
          pwd
          echo "Contents of the parent directory:"
          ls -la ..
          echo "Contents of the public directory:"
          ls -la public  # List contents of the public directory

      - name: Deploy to GitHub Pages
        run: |
          cd public  # Change directory to the gh-pages worktree
          git rm -rf .  # Clear the branch

          # Ensure public folder exists before copying
          if [ -d "../public" ]; then
            echo "Copying files from ../public to the gh-pages branch..."
            cp -R ../public/* .  # Copy new files from the main public directory
          else
            echo "Error: ../public directory does not exist!"
            exit 1  # Stop the workflow
          fi

          git add .  # Stage all changes
          git commit -m "Deploy updated site" || echo "No changes to commit"
          git push origin gh-pages  # Push the changes

      - name: Debug Git State (If Deployment Fails)
        if: failure()
        run: |
          git status
          git branch -a
          git log --oneline -5
