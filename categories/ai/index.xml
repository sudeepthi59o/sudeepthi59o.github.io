<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ai on Sudeepthi Rebbalapalli</title><link>https://sudeepthi59o.github.io/categories/ai/</link><description>Recent content in Ai on Sudeepthi Rebbalapalli</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Sat, 12 Apr 2025 23:00:00 +0000</lastBuildDate><atom:link href="https://sudeepthi59o.github.io/categories/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>Automated Acquire Game</title><link>https://sudeepthi59o.github.io/projects/automated-acquire-game/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/projects/automated-acquire-game/</guid><description>&lt;p>The Automated Acquire Game project is a Python-based implementation of the classic board game &lt;a href="https://en.wikipedia.org/wiki/Acquire">Acquire&lt;/a>, designed to simulate and automate gameplay. It includes intelligent decision-making algorithms to simulate player behavior and strategic gameplay. The project is modular, handling different aspects of the game such as gameplay flow, board state, and AI-driven player logic.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Acquire_gameboard.JPG/640px-Acquire_gameboard.JPG" alt="Acquire board game">&lt;/p>
&lt;hr>
&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Automated Gameplay&lt;/strong>: AI-driven simulation allows the game to play itself with no human input.&lt;/li>
&lt;li>&lt;strong>Player Behavior Modeling&lt;/strong>: Uses game-tree logic to simulate strategic decision-making.&lt;/li>
&lt;li>&lt;strong>Board Management&lt;/strong>: Automates tile placement, hotel formation, mergers, and score calculation.&lt;/li>
&lt;li>&lt;strong>Game Tree Logic&lt;/strong>: Evaluates possible moves and predicts outcomes for better strategy.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="impact">Impact&lt;/h2>
&lt;p>This project adds an AI-powered dimension to a classic strategy board game, making it a strong showcase for algorithms, decision trees, and game theory. It offers a foundation for developing more complex game-playing AI or simulating various player types.&lt;/p></description></item><item><title>Early Onset Parkinson's Detection from Speech Data</title><link>https://sudeepthi59o.github.io/projects/early-onset-parkinsons-detection/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/projects/early-onset-parkinsons-detection/</guid><description>&lt;p>This is some content&lt;/p></description></item><item><title>Parts-of-Speech (POS) Tagging with Hidden Markov Models (HMM) and Viterbi Algorithm</title><link>https://sudeepthi59o.github.io/projects/pos-tagging-hmm/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/projects/pos-tagging-hmm/</guid><description>&lt;p>This is some content&lt;/p></description></item><item><title>Predictive maintainance using AWS</title><link>https://sudeepthi59o.github.io/projects/predictive-maintainance/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/projects/predictive-maintainance/</guid><description>&lt;p>This is some content&lt;/p></description></item></channel></rss>