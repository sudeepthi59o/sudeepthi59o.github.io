<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Sudeepthi Rebbalapalli</title><link>https://sudeepthi59o.github.io/portfolio/</link><description>Recent content in Projects on Sudeepthi Rebbalapalli</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Sat, 12 Apr 2025 23:00:00 +0000</lastBuildDate><atom:link href="https://sudeepthi59o.github.io/portfolio/index.xml" rel="self" type="application/rss+xml"/><item><title>Automated Acquire Game</title><link>https://sudeepthi59o.github.io/portfolio/automated-acquire-game/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/automated-acquire-game/</guid><description>&lt;p>The Automated Acquire Game project is a Python-based implementation of the classic board game &lt;a href="https://en.wikipedia.org/wiki/Acquire">Acquire&lt;/a>, designed to simulate and automate gameplay. It includes intelligent decision-making algorithms to simulate player behavior and strategic gameplay. The project is structured with a modular object-oriented architecture, handling different components such as gameplay flow, board state management, and AI-driven player logic.&lt;/p>
&lt;hr>
&lt;h2 id="key-features">&lt;strong>Key Features&lt;/strong>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Automated Gameplay&lt;/strong>: AI-driven simulation allows the game to play itself with no human input.&lt;/p></description></item><item><title>Early Onset Parkinson's Detection from Speech Data</title><link>https://sudeepthi59o.github.io/portfolio/early-onset-parkinsons-detection/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/early-onset-parkinsons-detection/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project implements an end-to-end deep learning model using &lt;strong>convolutional neural networks (CNNs)&lt;/strong> to detect &lt;strong>early-onset Parkinson&amp;rsquo;s Disease (PD)&lt;/strong> from speech data. By leveraging &lt;strong>Mel spectrograms&lt;/strong>—visual and mathematical representations of sound frequencies over time, to reflect human hearing perception—our model extracts features that help identify vocal indicators of PD.&lt;/p>
&lt;p>The work builds on methodologies by Quan et al. and evaluates their applicability to a real-world Italian dataset. Tools like &lt;strong>Librosa&lt;/strong> were used for audio processing, and &lt;strong>NeuroSpeech&lt;/strong>, a software tool designed to assist medical professionals in evaluating biomarkers of neurodegenerative diseases through speech analysis, was explored to identify the key factors in detecting PD from speech.&lt;/p></description></item><item><title>A Data-Driven Exploration Using GCP and Visualization Tools</title><link>https://sudeepthi59o.github.io/portfolio/human-development_index-gcp/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/human-development_index-gcp/</guid><description>&lt;h3 id="overview">Overview&lt;/h3>
&lt;p>This project involves analyzing global Human Development Indices (HDI), Gender Development Index (GDI), and Gender Inequality Index (GII) over time using cloud-based data pipelines and interactive visualizations. By analyzing historical trends, it identifies the effects of global crises on development indices, including the Syrian Civil War, Yemen Civil War, and the Taliban&amp;rsquo;s takeover of Afghanistan.&lt;/p>
&lt;h3 id="technologies-used">Technologies Used&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Google Cloud Platform (GCP)&lt;/strong>: Utilized for creating a scalable, efficient data pipeline using BigQuery and Cloud Functions.&lt;/li>
&lt;li>&lt;strong>BigQuery&lt;/strong>: Data storage and querying platform used for large-scale, high-performance analysis of HDI, GDI, and GII datasets.&lt;/li>
&lt;li>&lt;strong>Python&lt;/strong>: Python scripts were written to automate the process of transforming raw data, staging it in BigQuery, and visualizing trends.&lt;/li>
&lt;li>&lt;strong>Plotly&lt;/strong>: Integrated to create interactive and dynamic visualizations to showcase the global development trends.&lt;/li>
&lt;li>&lt;strong>Cloud Storage&lt;/strong>: Used for storing and retrieving raw datasets from cloud storage buckets.&lt;/li>
&lt;/ul>
&lt;h3 id="project-workflow">Project Workflow&lt;/h3>
&lt;h4 id="1-data-pipeline">1. Data Pipeline&lt;/h4>
&lt;ul>
&lt;li>Data is stored in Google Cloud Storage buckets as CSV files.&lt;/li>
&lt;li>Using &lt;strong>Google Cloud Functions&lt;/strong>, an event-driven architecture is set up to trigger data processing whenever new files are uploaded.&lt;/li>
&lt;li>&lt;strong>BigQuery&lt;/strong> is used for creating tables and querying large datasets.&lt;/li>
&lt;/ul>
&lt;h4 id="2-data-processing">2. Data Processing&lt;/h4>
&lt;p>Python scripts are written to automate the transformation and staging of raw data into BigQuery tables. The following Python script automates the process of loading data from Cloud Storage to BigQuery:&lt;/p></description></item><item><title>Android Box Drawing App</title><link>https://sudeepthi59o.github.io/portfolio/drawing-boxes/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/drawing-boxes/</guid><description/></item><item><title>Android Calculator App</title><link>https://sudeepthi59o.github.io/portfolio/calculator/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/calculator/</guid><description>&lt;h2 id="android-calculator-app">Android Calculator App&lt;/h2>
&lt;p>The Android Calculator app is designed to perform basic arithmetic operations while mimicking the functionality of the iPhone&amp;rsquo;s default calculator. It supports both portrait and landscape modes, with landscape mode unlocking advanced trigonometric and logarithmic functions.&lt;/p>
&lt;h2 id="core-features">Core Features&lt;/h2>
&lt;ul>
&lt;li>Basic arithmetic operations (addition, subtraction, multiplication, division)&lt;/li>
&lt;li>Trigonometric functions (sin, cos, tan) and logarithmic functions (log10, ln) in landscape mode&lt;/li>
&lt;li>User input persists across device rotations&lt;/li>
&lt;li>Custom app icon and button layout&lt;/li>
&lt;li>Log messages recorded for each button click&lt;/li>
&lt;/ul>
&lt;h2 id="design-and-user-interface">Design and User Interface&lt;/h2>
&lt;p>The app features a simple and intuitive interface with a standard calculator layout. In landscape mode, the layout adjusts to provide additional scientific functions, while the UI remains clear and easy to navigate. The app dynamically adjusts to changes in orientation, ensuring users can continue their calculations without interruption.&lt;/p></description></item><item><title>Android Notes App</title><link>https://sudeepthi59o.github.io/portfolio/notes-app/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/notes-app/</guid><description/></item><item><title>Android Pizza Ordering Interface</title><link>https://sudeepthi59o.github.io/portfolio/pizza-app/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/pizza-app/</guid><description/></item><item><title>Android Posts App</title><link>https://sudeepthi59o.github.io/portfolio/posts-app/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/posts-app/</guid><description/></item><item><title>Android Sunset Animation App</title><link>https://sudeepthi59o.github.io/portfolio/sunset-animation/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/sunset-animation/</guid><description/></item><item><title>Android Ticketing App</title><link>https://sudeepthi59o.github.io/portfolio/ticketing-app/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/ticketing-app/</guid><description/></item><item><title>Computer Networks Projects</title><link>https://sudeepthi59o.github.io/portfolio/computer-networks/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/computer-networks/</guid><description>&lt;p>This multi-part project series was developed over the span of a graduate-level Computer Networks course. Each module focused on implementing key components of real-world networking, including application-level protocols and custom transport-layer mechanisms. All implementations were written in C using low-level socket programming.&lt;/p>
&lt;hr>
&lt;h2 id="project-modules">Project Modules&lt;/h2>
&lt;h3 id="http-client--server">HTTP Client &amp;amp; Server&lt;/h3>
&lt;p>Built a fully functional HTTP client and server pair, supporting basic GET/POST requests and response parsing. This helped explore how web browsers and servers communicate.&lt;/p></description></item><item><title>Parts-of-Speech (POS) Tagging with Hidden Markov Models (HMM) and Viterbi Algorithm</title><link>https://sudeepthi59o.github.io/portfolio/pos-tagging-hmm/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/pos-tagging-hmm/</guid><description>&lt;p>This is some content&lt;/p></description></item><item><title>Predictive Maintenance Using AWS Machine Learning</title><link>https://sudeepthi59o.github.io/portfolio/predictive-maintainance/</link><pubDate>Sat, 12 Apr 2025 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/predictive-maintainance/</guid><description>&lt;h2 id="aws-machine-learning-for-predictive-maintenance">AWS Machine Learning for Predictive Maintenance&lt;/h2>
&lt;h3 id="overview">&lt;strong>Overview&lt;/strong>&lt;/h3>
&lt;p>This project focuses on building a Predictive Maintenance system using the &lt;a href="https://archive.ics.uci.edu/dataset/682/ai4i+2020+predictive+maintenance+dataset">AI4I 2020 Predictive Maintenance Dataset&lt;/a> and &lt;a href="https://aws.amazon.com/sagemaker/canvas/">AWS SageMaker Canvas&lt;/a>, a no-code ML platform. The goal is to predict machine failures before they occur based on operational and sensor data. By leveraging AWS services, the project efficiently processes and analyzes data to provide real-time predictions of equipment malfunctions.&lt;/p>
&lt;p>Key steps included data ingestion, cleaning, feature engineering, exploratory analysis, model building, evaluation, and basic explainability.&lt;/p></description></item><item><title>Hugo Portfolio Website</title><link>https://sudeepthi59o.github.io/portfolio/hugo-portfolio-website/</link><pubDate>Fri, 19 Jun 2020 23:00:00 +0000</pubDate><guid>https://sudeepthi59o.github.io/portfolio/hugo-portfolio-website/</guid><description>&lt;p>I created my portfolio website using Hugo and UIKit, it serves as an online resume containing all my work.&lt;/p>
&lt;p>This has been created as a theme so that others can use and adapt it.&lt;/p>
&lt;h2 id="sections">Sections&lt;/h2>
&lt;h3 id="homepage">Homepage&lt;/h3>
&lt;p>&lt;img src="https://res.cloudinary.com/samrobbins/image/upload/q_auto/v1591885280/screenshot_aexm2m.png" alt="Homepage Screenshot" title="Homepage Screenshot">&lt;/p>
&lt;p>The homepage provides the basic information about you, including links to social media, skills you have, things you&amp;rsquo;ve done and your education. This page makes good use of UIKit grid and cards for organising all the information and ensuring it is responsive to work on mobile devices. The hackathon section of this page uses code from &lt;a href="https://github.com/web-tiki/responsive-grid-of-hexagons" title="https://github.com/web-tiki/responsive-grid-of-hexagons">https://github.com/web-tiki/responsive-grid-of-hexagons&lt;/a> to ensure that the hexagons tile correctly.&lt;/p></description></item></channel></rss>